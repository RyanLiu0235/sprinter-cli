#!/usr/bin/env node

const path = require('path')
const program = require('commander')
const ora = require('ora')
const fse = require('fs-extra')
const download = require('download-git-repo')

program
  .usage('<template-name> [project-name]')
  .parse(process.argv)

const args = program.args
const template = args[0]
const project = args[1]
// const templatePath = path.resolve(__dirname, '../templates', template)

// paddings
console.log()
process.on('exit', () => { console.log() })

run()

async function run() {
  const spinner = ora('Downloading files...')
  spinner.start()
  await downloadTemplate(template)
  // await fse.copy(templatePath, path.resolve(process.cwd(), project))
  spinner.stop()
  console.log('Project has been initiated successfully!')
  console.log()
  console.log(`    $ cd ${project} && npm install`)
  console.log('    $ npm run tdd')
}

function downloadTemplate(template) {
  return new Promise((resolve, reject) => {
    download(`sprinter-templates/${template}`, path.resolve(process.cwd(), project), err => {
      err ? reject(err) : resolve()
    })
  })
}
